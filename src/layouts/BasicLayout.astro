---
import { LINKS } from "../lib/constants";

interface Props {
  title: string;
  description: string;
  page?: "travel" | "blog";
  slug?: string | undefined;
  pubDate?: string;
}

const { title, description, page, slug, pubDate } = Astro.props;
const image =
  page === "travel"
    ? `${Astro.url.origin}/globe_preview.webp"`
    : `${Astro.url.origin}/og-image.jpg`;

const schema =
  page !== "blog"
    ? {
        "@context": "http://schema.org",
        "@type": "Person",
        name: "Sam",
        url: Astro.url.origin,
        sameAs: [LINKS.linkedin, LINKS.github],
        image: `${Astro.url.origin}/og-image.jpg`,
        jobTitle: "Freelance Frontend Developer",
        worksFor: {
          "@type": "Organization",
          name: "Self-Employed",
          address: {
            "@type": "PostalAddress",
            addressLocality: "Germany",
            addressCountry: "IT",
          },
        },
        nationality: {
          "@type": "Country",
          name: "Italy",
        },
      }
    : {
        "@context": "http://schema.org",
        "@type": "BlogPosting",
        mainEntityOfPage: {
          "@type": "WebPage",
          "@id": `${Astro.url.origin}/blog/${slug}`,
        },
        headline: title || title,
        description: description || title,
        image: `${Astro.url.origin}/og-image.jpg`, //TODO: dynamic
        author: {
          "@type": "Person",
          name: "Sam",
          url: Astro.url.origin,
          sameAs: [LINKS.linkedin, LINKS.github],
        },
        publisher: {
          "@type": "Organization",
          name: "Sam",
          logo: {
            "@type": "ImageObject",
            url: `${Astro.url.origin}/og-image.jpg`,
          },
        },
        datePublished: pubDate || new Date().toISOString(),
        dateModified: pubDate || new Date().toISOString(),
      };
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="robots" content="index, follow" />
    <!-- Basic OG tags for sharing your website's content on platforms like Facebook and LinkedIn -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url.origin} />
    <meta
      property="og:image"
      content={image || `${Astro.url.origin}/og-image.jpg`}
    />
    <!-- Basic Twitter Card tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta
      name="twitter:image"
      content={image || `${Astro.url.origin}/og-image.jpg`}
    />

    <link rel="preconnect" href="https://cdn.fontshare.com" />
    {
      page === "travel" && (
        <link rel="canonical" href={`${Astro.url.origin}/travel`} />
      )
    }
    {
      page === "blog" && (
        <link rel="canonical" href={`${Astro.url.origin}/blog/${slug}`} />
      )
    }
    <script type="application/ld+json" set:html={JSON.stringify(schema)} />
  </head>
  <body
    class="bg-bs-black min-h-screen flex flex-col justify-center items-center"
  >
    <slot name="loader" />
    <slot />
  </body>
</html>

<style is:global>
  @font-face {
    font-family: "CabinetGrotesk";
    src: url("/fonts/CabinetGrotesk-Variable.ttf") format("truetype-variations");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
    font-weight: 100 1000;
  }
  @font-face {
    font-family: "Satoshi";
    src: url("/fonts/Satoshi-Variable.ttf") format("truetype-variations");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
    font-weight: 100 1000;
  }

  body {
    margin: 0;
    font-family: "Inter", "Satoshi", sans-serif;
    -webkit-font-smoothing: antialiased;
    background-color: #000000;
    color: #FFFFFF;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: "Inter", "Cabinet Grotesk", sans-serif;
    color: #FFFFFF;
    word-wrap: break-word;
    overflow-wrap: break-word;
    hyphens: auto;
  }
  
  p {
    font-family: "Inter", "Satoshi", sans-serif;
    color: #F5F5F5;
    word-wrap: break-word;
    overflow-wrap: break-word;
  }

  b {
    font-weight: 700 !important;
  }
  
  a {
    color: #F5F5F5;
    transition: color 0.2s ease-in-out;
    word-wrap: break-word;
    overflow-wrap: break-word;
  }
  
  a:hover {
    color: #FF6B35;
  }
  
  /* Fix overflow issues */
  * {
    box-sizing: border-box;
  }
  
  .card, .blog-card {
    word-wrap: break-word;
    overflow-wrap: break-word;
    hyphens: auto;
  }
  
  .card h2, .card h3, .blog-card h2, .blog-card h3 {
    word-wrap: break-word;
    overflow-wrap: break-word;
    hyphens: auto;
    line-height: 1.3;
  }
</style>
