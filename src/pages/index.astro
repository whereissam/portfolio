---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card/index.astro";
import IntroCard from "../components/IntroCard.astro";
import ContactsCard from "../components/ContactsCard.astro";
import TimeZone from "../components/TimeZoneCard.astro";
import AboutMe from "../components/AboutMe.astro";
import Now from "../components/Now.astro";
import Globe from "../components/Globe";
import { getCollection } from "astro:content";
import { formatDate } from "../lib/helpers";
import "@/styles/globals.css";

const posts = (await getCollection("blog"))?.sort(
  (blogEntryA, blogEntryB) =>
    (blogEntryB.data.pubDate || new Date()).getTime() -
    (blogEntryA.data.pubDate || new Date()).getTime()
);
---

<script>
  import { stagger, spring, timeline, type TimelineDefinition } from "motion";
  import { loaderAnimation } from "../lib/constants";
  const cards = document.querySelectorAll(".card");

  const sequence = [
    loaderAnimation,
    [
      cards,
      { y: ["40%", "0%"], opacity: [0, 1] },
      {
        at: "-0.1",
        duration: 0.4,
        delay: stagger(0.3),
        easing: spring({ velocity: 100, stiffness: 50, damping: 10 }),
      },
    ],
  ];

  timeline(sequence as TimelineDefinition);
</script>

<Layout
  title="Sam - Full-stack Developer"
  description="Full-stack developer based in Berlin, specializing in blockchain and Web3 development."
>
  <div class="min-h-screen w-full bg-bs-black relative">
    <!-- Background gradient -->
    <div class="absolute inset-0 bg-gradient-to-br from-bs-black via-bs-black to-bs-black-200 opacity-50"></div>
    <!-- Subtle pattern overlay -->
    <div class="absolute inset-0 opacity-5" style="background-image: radial-gradient(circle at 25% 25%, #FF6B35 0%, transparent 50%), radial-gradient(circle at 75% 75%, #FF6B35 0%, transparent 50%);"></div>
    
    <main
      class="relative z-10 text-white mx-auto w-full max-w-6xl p-2 grid gap-2 sm:p-4 sm:gap-2 md:grid-cols-2 md:gap-3 md:p-6 lg:grid-cols-4 lg:gap-4 pb-8"
    >
      <IntroCard />
      <AboutMe />
      <ContactsCard />
      <TimeZone />
      <Now />
      <Card
        colSpan="md:col-span-1"
        rowSpan="md:row-span-1"
        title="Countries I visited"
        href="travel"
        colorText="text-neutral-900"
      >
        <div class="h-full w-full absolute inset-0 -z-10">
          <Globe client:load />
        </div>
      </Card>
      <Card
        colSpan="md:col-span-1"
        rowSpan="md:row-span-2"
        title="✍️ Latest Posts"
        href="/blog"
        variant="accent"
      >
        <div class="flex flex-col h-full">
          <!-- Scrollable posts container -->
          <div class="flex-1 overflow-y-auto pr-2 -mr-2 space-y-3 max-h-[300px] custom-scrollbar">
            {
              posts?.slice(0, 5).map((post, index) => (
                <div class="group relative bg-bs-black-300 rounded-lg p-3 hover:bg-bs-black-400 transition-all duration-200 border border-bs-black-400 hover:border-bs-red cursor-pointer flex-shrink-0">
                  <div class="flex items-start gap-3">
                    <div class="flex-shrink-0">
                      <span class="inline-flex items-center justify-center w-5 h-5 bg-bs-red text-bs-white-100 rounded-full text-xs font-bold">
                        {index + 1}
                      </span>
                    </div>
                    <div class="flex-1 min-w-0">
                      <h3 class="text-bs-white-100 font-semibold text-xs leading-tight mb-1 line-clamp-2">
                        {post.data.title}
                      </h3>
                      {post.data.description && (
                        <p class="text-bs-white-300 text-xs leading-relaxed line-clamp-2 mb-2">
                          {post.data.description.length > 60 ? post.data.description.substring(0, 60) + "..." : post.data.description}
                        </p>
                      )}
                      {post.data.pubDate && (
                        <div class="flex items-center justify-between">
                          <time
                            class="text-bs-white-400 text-xs"
                            datetime={post.data.pubDate.toISOString()}
                          >
                            {formatDate(post.data.pubDate)}
                          </time>
                          <span class="text-bs-red group-hover:text-bs-white-100 text-xs transition-colors">
                            →
                          </span>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              ))
            }
          </div>
          
          <!-- Footer -->
          <div class="mt-4 pt-3 border-t border-bs-black-400">
            <div class="text-center">
              <span class="inline-flex items-center gap-2 text-bs-white-300 hover:text-bs-red text-xs font-medium transition-colors cursor-pointer">
                View all {posts?.length || 0} posts
                <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
                </svg>
              </span>
            </div>
          </div>
        </div>
      </Card>
      <Card colSpan="md:col-span-1" rowSpan="md:row-span-1">
        <p class="text-xs">© 2025 · blockspace right reserve</p>
      </Card>
      <Card
        colSpan="md:col-span-1 lg:col-span-4"
        rowSpan="md:row-span-2"
        title="🚀 Featured Projects"
        href="/projects"
        variant="elevated"
      >
        <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
          {
            [
              {
                title: "DoodleFish",
                category: "Web3",
                tech: ["Telegram Mini App", "TON"],
                status: "Live",
                color: "bg-blue-500/20 text-blue-300 border-blue-500/30"
              },
              {
                title: "SenderOS AI",
                category: "Web3",
                tech: ["Next.js", "LangChain"],
                status: "Beta",
                color: "bg-purple-500/20 text-purple-300 border-purple-500/30"
              },
              {
                title: "7007 Marketplace",
                category: "Web3",
                tech: ["Next.js", "IPFS"],
                status: "Archive",
                color: "bg-orange-500/20 text-orange-300 border-orange-500/30"
              },
              {
                title: "Rhino Shield Event",
                category: "Web2",
                tech: ["Next.js", "Interactive Design"],
                status: "Live",
                color: "bg-green-500/20 text-green-300 border-green-500/30"
              },
              {
                title: "Travel Management",
                category: "Web2", 
                tech: ["React", "Node.js", "MongoDB"],
                status: "Complete",
                color: "bg-cyan-500/20 text-cyan-300 border-cyan-500/30"
              }
            ].map((project) => (
              <div class="group relative bg-bs-black-300 rounded-xl p-4 hover:bg-bs-black-400 transition-all duration-300 border border-bs-black-400 hover:border-bs-red hover:shadow-lg hover:shadow-bs-red/10">
                <div class="flex items-start justify-between mb-3">
                  <div class="flex-1">
                    <h3 class="text-bs-white-100 font-bold text-sm mb-1 group-hover:text-bs-red transition-colors">
                      {project.title}
                    </h3>
                    <span class="inline-block px-2 py-1 rounded-full text-xs font-medium bg-bs-red/20 text-bs-red border border-bs-red/30">
                      {project.category}
                    </span>
                  </div>
                  <span class={`inline-block px-2 py-1 rounded-full text-xs font-medium border ${project.color}`}>
                    {project.status}
                  </span>
                </div>
                
                <div class="space-y-2">
                  <div class="flex flex-wrap gap-1">
                    {project.tech.map((tech) => (
                      <span class="inline-block px-2 py-1 bg-bs-black-400 text-bs-white-300 rounded text-xs font-medium">
                        {tech}
                      </span>
                    ))}
                  </div>
                </div>
                
                <div class="absolute top-3 right-3 opacity-0 group-hover:opacity-100 transition-opacity">
                  <svg class="w-4 h-4 text-bs-red" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                  </svg>
                </div>
              </div>
            ))
          }
        </div>
      </Card>
    </main>
  </div>
</Layout>
